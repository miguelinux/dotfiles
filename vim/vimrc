" An example for a vimrc file.
"
" Maintainer:	Bram Moolenaar <Bram@vim.org>
" Last change:	2011 Apr 15
"
" To use it, copy it to
"     for Unix and OS/2:  ~/.vimrc
"	      for Amiga:  s:.vimrc
"  for MS-DOS and Win32:  $VIM\_vimrc
"	    for OpenVMS:  sys$login:.vimrc

" When started as "evim", evim.vim will already have done these settings.
if v:progname =~? "evim"
  finish
endif

" Use Vim settings, rather than Vi settings (much better!).
" This must be first, because it changes other options as a side effect.
set nocompatible

" allow backspacing over everything in insert mode
set backspace=indent,eol,start

if has("vms")
  set nobackup		" do not keep a backup file, use versions instead
else
  set backup		" keep a backup file
endif
set history=50		" keep 50 lines of command line history
set ruler		" show the cursor position all the time
set showcmd		" display incomplete commands
set incsearch		" do incremental searching

" For Win32 GUI: remove 't' flag from 'guioptions': no tearoff menu entries
" let &guioptions = substitute(&guioptions, "t", "", "g")

" Don't use Ex mode, use Q for formatting
map Q gq

" CTRL-U in insert mode deletes a lot.  Use CTRL-G u to first break undo,
" so that you can undo CTRL-U after inserting a line break.
inoremap <C-U> <C-G>u<C-U>

" In many terminal emulators the mouse works just fine, thus enable it.
if has('mouse')
  set mouse=a
endif

" Switch syntax highlighting on, when the terminal has colors
" Also switch on highlighting the last used search pattern.
if &t_Co > 2 || has("gui_running")
  syntax on
  set hlsearch
endif

" Only do this part when compiled with support for autocommands.
if has("autocmd")

  " Enable file type detection.
  " Use the default filetype settings, so that mail gets 'tw' set to 72,
  " 'cindent' is on in C files, etc.
  " Also load indent files, to automatically do language-dependent indenting.
  filetype plugin indent on

  " Put these in an autocmd group, so that we can delete them easily.
  augroup vimrcEx
  au!

  " For all text files set 'textwidth' to 78 characters.
  autocmd FileType text setlocal textwidth=78

  " When editing a file, always jump to the last known cursor position.
  " Don't do it when the position is invalid or when inside an event handler
  " (happens when dropping a file on gvim).
  " Also don't do it when the mark is in the first line, that is the default
  " position when opening a file.
  autocmd BufReadPost *
    \ if line("'\"") > 1 && line("'\"") <= line("$") |
    \   exe "normal! g`\"" |
    \ endif

  augroup END

else

  set autoindent		" always set autoindenting on

endif " has("autocmd")

" Convenient command to see the difference between the current buffer and the
" file it was loaded from, thus the changes you made.
" Only define it when not defined already.
if !exists(":DiffOrig")
  command DiffOrig vert new | set bt=nofile | r ++edit # | 0d_ | diffthis
		  \ | wincmd p | diffthis
endif



" Miguelinux

if has('gui_running')
	"set guifont=Monospace h14
	"if has('gui_win32')
		"set guifont=Monospace:h14
	"endif
endif

if has('gui_gtk3')
	set guifont=Monospace\ Regular\ 14
endif

" Size of a hard tabstop
"set tabstop=4
" Size of an "indent"
"set shiftwidth=4
"set expandtab

" Set text with 80
set tw=80

highlight BadWhitespace ctermbg=red guibg=red

"" http://kernelnewbies.org/FirstKernelPatch
filetype plugin indent on
syn on se title

set tabstop=8
set softtabstop=8
set shiftwidth=8
set noexpandtab

au BufRead /tmp/mutt-* set tw=72
au BufRead /tmp/mutt-* setlocal spell spelllang=en_us
au BufRead /tmp/*/*.patch setlocal spell spelllang=en
au BufRead COMMIT_EDITMSG setlocal spell spelllang=en_us
au BufRead *.rst setlocal spell spelllang=en
au BufRead *.md  setlocal spell spelllang=en
au BufRead *.tex set tw=76
au BufRead *.tex setlocal spell spelllang=es

" Java
au BufRead,BufNewFile *.java set tabstop=4
au BufRead,BufNewFile *.java set softtabstop=4
au BufRead,BufNewFile *.java set shiftwidth=4
au BufRead,BufNewFile *.java set expandtab
au BufRead,BufNewFile *.java set autoindent
au BufRead,BufNewFile *.java match BadWhitespace /^\t\+/
au BufRead,BufNewFile *.java match BadWhitespace /\s\+$/
au         BufNewFile *.java set fileformat=unix
au BufRead,BufNewFile *.java let b:comment_leader = '//'

" syntax match Tab /\t/
" hi Tab gui=underline guifg=blue ctermbg=blue 
"  Show all tabs:
"/\t

" Show trailing whitespace:
"/\s\+$

" Show trailing whitespace only after some text (ignores blank lines):
"/\S\zs\s\+$

" Show spaces before a tab:
"/ \+\ze\t

" Used in ctags and cscope
nmap <F5> <C-]>

" The following maps all invoke one of the following cscope search types:
"
"   's'   symbol: find all references to the token under cursor
"   'g'   global: find global definition(s) of the token under cursor
"   'c'   calls:  find all calls to the function name under cursor
"   't'   text:   find all instances of the text under cursor
"   'e'   egrep:  egrep search for the word under cursor
"   'f'   file:   open the filename under cursor
"   'i'   includes: find files that include the filename under cursor
"   'd'   called: find functions that function under cursor calls

nmap <F6> :cs find c <C-R>=expand("<cword>")<CR><CR>
nmap <F7> :cs find s <C-R>=expand("<cword>")<CR><CR>
nmap <F8> :cs find g <C-R>=expand("<cword>")<CR><CR>


nmap <F4> :cs add $CSCOPE_DB

"function! LoadCscope()
  "let db = findfile("cscope.out", ".;")
  "if (!empty(db))
    "let path = strpart(db, 0, match(db, "/cscope.out$"))
    "set nocscopeverbose " suppress 'duplicate connection' error
    "exe "cs add " . db . " " . path
    "set cscopeverbose
  "endif
"endfunction
"au BufEnter /* call LoadCscope()

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
if exists('+colorcolumn')
  set colorcolumn=80
  "highlight ColorColumn ctermbg=lightgrey guibg=lightgrey
  highlight ColorColumn ctermbg=DarkBlue guibg=lightgrey
  " Same
  "highlight OverLength ctermbg=red ctermfg=white guibg=#592929
  "match OverLength /\%81v.*/
else
  au BufWinEnter * let w:m2=matchadd('ErrorMsg', '\%>80v.\+', -1)
endif

if has("autocmd")
  augroup templates
    autocmd BufNewFile *.c    0r ~/.vim/templates/skeleton.c
    autocmd BufNewFile *.cpp  0r ~/.vim/templates/skeleton.c
    autocmd BufNewFile *.h    0r ~/.vim/templates/skeleton.h
    autocmd BufNewFile *.java 0r ~/.vim/templates/skeleton.java
    autocmd BufNewFile *.py   0r ~/.vim/templates/skeleton.py
    autocmd BufNewFile *.sh   0r ~/.vim/templates/skeleton.sh
  augroup END
endif

" Dark color at night
if strftime("%H") > 17 || strftime("%H") < 9
  colorscheme torte
endif

" swapfiles to /tmp and .
silent !mkdir -m 0700 -p /tmp/.vim-cache
set directory=/tmp/.vim-cache,.

" backup files to ~/.cache and .
silent !mkdir -p ~/.cache/vim/
set backupdir=~/.cache/vim,.

